class Solution {
    public:
    void fun(int i,int tar,vector<int>&arr,vector<vector<int>>&ans,vector<int>&val){
    
        if(i==arr.size()){
            if(tar==0){
                ans.push_back(val);
            }
            return;
        }
        
        //ðŸ‘‰ pickup value 
        if(arr[i]<=tar){
            val.push_back(arr[i]);
        //ðŸ‘‰ when picking up value the index remain same(unlimit) and target reduces
            fun(i,tar-arr[i],arr,ans,val);
           val. pop_back();
        }
        //ðŸ‘‰ not pick index++
        fun(i+1,tar,arr,ans,val);
    }
    
public:
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
    
        vector<vector<int>>ans;
        vector<int>val;
        fun(0,target,candidates,ans,val);
        return ans;
    }
};
